package frc.robot.subsystems;

import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.command.Subsystem;

import frc.robot.interfaces.ISetOfElbows;
import frc.robot.Ports;
//import frc.robot.commands.HookSwitchUp;


// a class to control elbows
public class SetOfElbows extends Subsystem implements ISetOfElbows {
	
	static final int WAIT_MS = 1000;
	
	DoubleSolenoid closedOpen;

	public SetOfElbows(DoubleSolenoid closedOpen_in) {
		// the double solenoid valve will send compressed air from the tank wherever needed
		closedOpen = closedOpen_in;	
	}
	
	@Override
	public void initDefaultCommand() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

		// Set the default command for a subsystem here.
		//setDefaultCommand(new HookSwitchUp());
	}

	@Override
	public void periodic() {
		// Put code here to be run every loop

	}

	public void setPosition(Position pos)
	{
		switch(pos)
		{
			case CLOSED:
			{
				closedOpen.set(DoubleSolenoid.Value.kReverse); // adjust direction if needed
				break;
			}
			case OPEN:
			{
				closedOpen.set(DoubleSolenoid.Value.kForward); // adjust direction if needed
				break;
			}
			default:
			{
				// do nothing
			}
		}
	}

	public Position getPosition()
	{
		DoubleSolenoid.Value value = closedOpen.get();
		
		switch(value)
		{
			case kReverse:
			{
				return Position.CLOSED;
			}
			case kForward:
			{
				return Position.OPEN;
			}
			default:
			{
				return Position.UNKNOWN;
			}
		}
	}
}
